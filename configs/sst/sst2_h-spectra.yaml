# general args
seed: 38    # for reproducibility
default_root_dir: 'experiments_nh:1/sst2-h-spectra/'  # path to save logs and models


# training args
train:

    # io
    save_rationales: True       # rationales will be saved in a .csv in the default_root_dir as `rationales-{timestamp}.csv`
    save_tokenizer: True        # the tokenizer will be pickled and store in the checkpoint dir as `tokenizer.pickle`
    save_label_encoder: True    # the label encoder will be pickled and store in the checkpoint dir as `label_encoder.pickle`
    gpu_log: False              # whether to use the gpu callback to see gpu information in the logger

    # data
    dm: 'sst'                       # data module name (see docs for more options)
    granularity: '2'                # binary classification
    subtrees: False                 # do not use subtrees
    batch_size: 32                  # minibatch size
    num_workers: 4                  # number of workers used for data loading (0 means that only a single core will be used)
    vocab_min_occurrences:  1       # frequency for a token to be added to the vocabulary

    # early stopping
    monitor: 'val_f1score'     # quantity to be monitored
    monitor_mode: 'max'         # whether to see if monitored metric has stopped decreasing (min) or increasing (max)
    monitor_patience: 10         # number of epochs to wait for early stopping

    # pytorch-lightning rationalizer model
    model: 'h-spectra'
    embed_fixed: True
    classification: True

    # model: optimizer
    optimizer: 'adam'
    lr: 0.0001
    weight_decay: 0.0001
    betas: [0.9, 0.999]
    amsgrad: False
    momentum: 0.0
    dampening: 0.0
    nesterov: False
    alpha: 0.99   # for rmsprop
    centered: False  # for rmsprop
    lambd: 0.0001  # for asgd
    t0: 1000000.0  # for asgd

    # model: lr scheduler
    scheduler: 'plateau'
    milestones: [25, 50, 75]
    lr_decay: 0.97  # a.k.a gamma
    patience: 5
    cooldown: 0
    threshold: 0.0001
    min_lr: 0
    eta_min: 0
    T_max: 10

    # model: architecture
    emb_type: 'glove'
    emb_path: '840B'  # automatically downloads glove's 840B 300d model
    emb_size: 300
    hidden_size: 200
    dropout: 0.1
    sentence_encoder_layer_type: 'lstm'
    transition: 0.001
    budget: 20
    temperature: 0.1
    n_heads: 1
    bag_dropout: 0.5

    factor: "budget"

    # trainer (will be passed to pytorch-lightning's Trainer object)
    # see the complete list here: https://pytorch-lightning.readthedocs.io/en/stable/trainer.html#trainer-flags
    gpus: 1
    gradient_clip_val: 5.0
    min_epochs: 45
    max_epochs: 60
    #limit_test_batches:
    #limit_train_batches: 10
    #limit_val_batches: 2
    #log_every_n_steps: 10